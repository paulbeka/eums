name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Use the same Node.js version as in your Dockerfile

      - name: Install dependencies and build the app
        run: |
          cd frontend
          npm install
          npm run build  # Builds the app into the "build" folder

      - name: Archive the build directory
        uses: actions/upload-artifact@v4  # Updated to the latest version
        with:
          name: react-build
          path: frontend/build  # Upload the build directory

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_DEPLOY_KEY }}

      - name: Add DigitalOcean server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 134.122.92.255 >> ~/.ssh/known_hosts

      - name: Download the build files and deploy to DigitalOcean
        run: |
          # Download the build artifact from GitHub
          mkdir -p /tmp/react-build
          curl -L -o /tmp/react-build.zip https://github.com/${{ github.repository }}/actions/artifacts/${{ github.run_id }}/react-build.zip
          unzip /tmp/react-build.zip -d /tmp/react-build

          # SSH into the DigitalOcean server
          ssh root@134.122.92.255 << 'EOF'
            # Update server and install dependencies
            apt update
            apt install -y docker-compose unzip

            # Clone repo if not already cloned, or update it
            [ ! -d "eums" ] && git clone https://github.com/paulbeka/eums.git
            cd eums
            git stash
            git pull --force

            # Clean up previous build and deploy new build
            rm -rf /var/www/html/*  # Remove old build files if necessary
            cp -r /tmp/react-build/build/* /var/www/html/

            # Ensure Docker is up-to-date and restart containers
            docker-compose down
            docker-compose up --build -d
          EOF
